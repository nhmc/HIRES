#!/usr/bin/env python
import sys

usage = """\
find_koa [options] filename

Options:

--catalogue cataloguename     path and filename of the KOA catalogue.
--trace                       find exposures suitable for use as a trace
"""

KOAfilename = '/home/nhmc/data/HIRES/koa/KOA_HIRES_20110305.fits'
findtrace = False
xdispers = None

args = sys.argv[1:]
if len(args) < 1 or len(args) > 2:
    print usage
    sys.exit()

try:
    from astropy.io import fits
except ImportError:
    import pyfits as fits	
import numpy as np
from barak.utilities import between

while args[0].startswith('--'):
    option = args.pop(0)
    if option == '--catalogue':
        KOAfilename = args.pop(0)
    elif option == '--trace':
        print 'searching for a trace object (exposure time < 600s)'
        findtrace = True 
    else:
        print usage
        sys.exit()

fh = fits.open(args[0])
hd = fh[0].header
echangl = hd['ECHANGL']
xdangl = hd['XDANGL']
binning = hd['BINNING']
dateobs = hd['DATE-OBS']
if 'XDISPERS' in hd:
    xdispers = hd['XDISPERS']

    koa = fits.getdata(KOAfilename).view(np.recarray)
     
    tol = 0.002
    cond = between(koa.echangl, echangl - tol, echangl + tol)
    cond &= between(koa.xdangl, xdangl - tol, xdangl + tol)
    cond &= koa.binning == binning
    if xdispers is not None:
        cond &= koa.xdispers == xdispers
    if findtrace:
        cond &= koa.elaptime < 600
        isflat = koa.imagetyp == 'flatlamp'
        # don't want a flat unless it has the pinhole decker
        cond &= ~isflat | (isflat & (koa.deckname == 'D5'))
        # don't want darks or arcs.
        isdark = (koa.imagetyp == 'dark') | (koa.imagetyp == 'dark_lamp_on')
        cond &= ~isdark
        cond &= (koa.imagetyp != 'arclamp')
     
    if not cond.sum():
        print 'None found!'
        sys.exit()

koa1 = koa[cond]
dates = np.array([int(d.replace('-', '')) for d in koa1.date_obs])
datediff = np.abs(dates - int(dateobs.replace('-','')))
isort = datediff.argsort()
count = 1
for k in koa1[isort]:
    obj = k['object'].lower()
    if 'flat' in obj or 'dark' in obj:
	continue
    print '%-20s %s %s %s' %( k['object'][:20], k['koaid'], k['ut'], 
			      k['deckname'])
    if count == 10:
	break
    count +=1

