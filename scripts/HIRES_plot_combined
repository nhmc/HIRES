#!/usr/bin/env python
import pylab as pl
import matplotlib.transforms as mtransforms
import numpy as np
from glob import glob
from atpy import Table

if 1:
    # print separate spectra and clipped pixels, the combined spectrum
    # and sky
    sp = [np.load(n).view(np.recarray) for n in sorted(glob('./rebinned/*.npy'))]

    csp = Table('combined.fits')
    wa, fl, er, npts, bg = csp.wa, csp.fl, csp.er, csp.npts, csp.bg

    colours = list('rgkmcy') + ['crimson', 'purple', 'orange', 'gray', 'brown']
    fig = pl.figure(figsize=(14,5))
    fig.subplots_adjust(left=0.04, right=0.98)
    ax = pl.gca()
    ax.axhline(0, color='k', ls='--')
    bg0 = bg / np.nanmax(bg)
    trans = mtransforms.blended_transform_factory(ax.transData, ax.transAxes)
    ax.fill_between(wa, bg0, color='r', lw=0, alpha=0.3,transform=trans)
    for i,s in enumerate(sp):
        c = colours[i % len(colours)]
        c0 = s.er > 0
        l, = ax.plot(wa[c0], s.fl[c0], color=c, lw=0.5, label=str(i),ls='steps-mid')
        ax.plot(wa[s.clipped], s.fl[s.clipped], 'x', mew=2, color=l.get_color())
    ax.plot(wa, fl, 'b', alpha=0.7, ls='steps-mid', lw=2)
    ax.plot(wa, 0.02*npts, color='crimson', lw=0.5, ls='steps-mid',transform=trans)
    #pl.legend(frameon=0, ncol=6)

    ymax = abs(np.percentile(fl[er>0], 90))
    ax.set_ylim(-0.1*ymax, 2*ymax)
    ax.set_xlim(wa[0], wa[-1])    
    pl.show()
