#!/usr/bin/env python
import sys

usage = """\
download_koa filename outputfilename

Download a fits file from the Keck Observatory archive.

e.g.  download_koa HI.20060703.20567.fits trace.fits
"""
args = sys.argv[1:]

if len(args) != 2:
    print usage
    sys.exit()

import urllib2

# this is
# from http://stackoverflow.com/questions/2028517/python-urllib2-progress-hook,
# it allows progress report when downloading.

def chunk_report(bytes_so_far, chunk_size, total_size):
   percent = float(bytes_so_far) / total_size
   percent = round(percent*100, 2)
   sys.stdout.write("Downloaded %d of %d bytes (%0.2f%%)\r" % 
       (bytes_so_far, total_size, percent))

   if bytes_so_far >= total_size:
      sys.stdout.write('\n')

def chunk_read(response, chunk_size=8192, report_hook=None):
    total_size = response.info().getheader('Content-Length').strip()
    total_size = int(total_size)
    bytes_so_far = 0

    data = []
    while 1:
        chunk = response.read(chunk_size)
        bytes_so_far += len(chunk)
        data.append(chunk)

        if not chunk:
            break

        if report_hook:
            report_hook(bytes_so_far, chunk_size, total_size)

    return data

filename, outname = args

date = filename.split('.')[1]
print 'Opening KOA page:'

disknum = 1

fmt = 'https://koa.ipac.caltech.edu/cgi-bin/getHIRES/nph-getHIRES?filehand=/koadata%i/HIRES/%s/lev0/%s'
s = fmt  % (disknum, date, filename)
print s 
response = urllib2.urlopen(s)

while response.info().getheader('Content-type') != 'image/x-fits':
    disknum += 1
    if disknum > 4:
        raise RuntimeError('File not found!')
    # try new disk number
    s = fmt  % (disknum, date, filename)
    print s 
    response = urllib2.urlopen(s)

data = chunk_read(response, report_hook=chunk_report)

        
print 'Writing to %s' % outname
fh = open(outname, 'wb')
fh.write(''.join(data))
fh.close()
